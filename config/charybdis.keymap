#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
            require-prior-idle-ms = <100>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            require-prior-idle-ms = <100>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <29 28>;
            require-prior-idle-ms = <100>;
        };

        bt+boot_right {
            bindings = <&mo 4>;
            key-positions = <5 6 7 8>;
        };

        bt+boot_left {
            bindings = <&mo 4>;
            key-positions = <1 2 3 4>;
        };

        leftpar {
            bindings = <&kp LPAR>;
            key-positions = <23 24>;
        };

        rightpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <25 26>;
        };

        leftbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        rightbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        leftbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 4>;
        };

        rightbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <5 6>;
        };

        lt {
            bindings = <&kp LT>;
            key-positions = <22 23>;
        };

        gt {
            bindings = <&kp GT>;
            key-positions = <26 27>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <16 17>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <6 7>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <12 13>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <2 3>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <21 22>;
        };

        amp {
            bindings = <&kp AMPS>;
            key-positions = <11 12>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <1 2>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <20 21>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <10 11>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <27 28>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <17 18>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };

        caps {
            bindings = <&kp CLCK>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q              &kp W  &kp E         &kp R        &kp T        &kp Y      &kp U            &kp I      &kp O    &kp P
  &bhm LEFT_ALT A    &kp S  &kp D         &kp F        &kp G        &kp H      &kp K            &kp K      &kp L    &bhm RIGHT_ALT SLASH
  &bhm LEFT_SHIFT Z  &kp X  &kp C         &kp V        &lt 1 B      &lt 7 N    &lt 6 M          &kp COMMA  &kp DOT  &kp LEFT_SHIFT
                            &kp LEFT_GUI  &lt 5 SPACE  &kp LCTRL    &lt 3 RET  &lt 2 BACKSPACE
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
  &kp F1  &kp F2   &kp F3    &kp F4     &none         &kp N0        &kp N1  &kp N2  &kp N3        &kp MINUS
  &kp F5  &kp F6   &kp F7    &kp F8     &none         &kp SLASH     &kp N4  &kp N5  &kp NUMBER_6  &kp PLUS
  &kp F9  &kp F10  &kp F11   &kp F12    &none         &kp ASTERISK  &kp N7  &kp N8  &kp N9        &kp EQUAL
                   &kp LEFT  &kp RIGHT  &kp DELETE    &kp DEL       &trans
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
  &kp DOLLAR  &kp PERCENT    &kp CARET         &kp LBRC  &kp RBRC     &kp EQUAL  &kp PLUS      &kp GRAVE  &kp SINGLE_QUOTE   &kp SEMICOLON
  &kp AMPS    &kp EXCL       &kp QMARK         &kp LBKT  &kp RBKT     &kp UNDER  &kp MINUS     &trans     &kp DOUBLE_QUOTES  &kp COLON
  &kp AT      &kp LESS_THAN  &kp GREATER_THAN  &kp LPAR  &kp RPAR     &kp HASH   &kp ASTERISK  &kp TILDE  &kp PIPE           &kp BACKSLASH
                             &trans            &trans    &kp SPACE    &trans     &trans
            >;
        };

        nav-and-fn {
            label = "nav-and-fn";
            bindings = <
  &kp LS(TAB)  &kp TAB  &kp INSERT  &kp HOME  &kp PAGE_UP        &none       &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(UP)  &kp LA(RIGHT)
  &none        &none    &none       &kp END   &kp PAGE_DOWN      &none       &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT
  &to 8        &none    &none       &none     &kp PRINTSCREEN    &kp DELETE  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)  &kp LC(RIGHT)
                        &trans      &trans    &kp SPACE          &trans      &trans
            >;
        };

        bt+boot {
            label = "bt+boot";
            bindings = <
  &bt BT_NXT    &bt BT_PRV  &none  &none  &none          &none        &none  &none  &none  &none
  &bt BT_CLR    &none       &none  &none  &none          &none        &none  &none  &none  &none
  &out OUT_TOG  &none       &none  &none  &bootloader    &bootloader  &none  &none  &none  &none
                            &none  &none  &none          &none        &none
            >;
        };

        Mouse {
            bindings = <
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &mkp MCLK  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &mkp LCLK
                     &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };

        macro-1 {
            bindings = <
  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &none       &none    &none  &none  &none  &none  &none
  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &none       &none    &none  &none  &none  &none  &none
  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)  &none    &none  &none  &none  &none  &none
                          &none       &none       &none    &none  &none
            >;
        };

        macro-2 {
            bindings = <
  &kp LG(LS(N1))  &kp LG(LS(N2))  &kp LS(LG(N3))  &none           &none    &none  &none  &none  &none  &none
  &kp LG(LS(N4))  &kp LG(LS(N5))  &kp LG(LS(N6))  &none           &none    &none  &none  &none  &none  &none
  &kp LG(LS(N7))  &kp LG(LS(N8))  &kp LG(LS(N9))  &kp LS(LG(N0))  &none    &none  &none  &none  &none  &none
                                  &none           &none           &none    &none  &none
            >;
        };

        game {
            bindings = <
  &kp TAB     &kp Q  &kp W   &kp E  &kp R        &kp F1     &kp F2            &kp F3     &kp F4  &kp F5
  &kp LCTRL   &kp A  &kp S   &kp D  &kp F        &kp COMMA  &kp PERIOD        &none      &none   &none
  &kp LSHIFT  &kp Z  &kp X   &kp C  &kp V        &mkp LCLK  &mkp MCLK         &mkp RCLK  &none   &to 0
                     &mo 10  &mo 9  &kp SPACE    &mo 2      &kp LEFT_CONTROL
            >;
        };

        game+ {
            bindings = <
  &kp T  &kp Y  &kp U   &kp I   &kp O        &trans  &trans            &trans  &trans  &trans
  &kp G  &kp H  &kp J   &kp K   &kp L        &trans  &trans            &trans  &trans  &trans
  &kp B  &kp N  &kp M   &kp P   &kp TILDE    &trans  &trans            &trans  &trans  &trans
                &trans  &trans  &kp SPACE    &mo 2   &kp LEFT_CONTROL
            >;
        };

        game++ {
            bindings = <
  &kp ESC  &kp HOME  &kp UP    &kp END    &kp PAGE_UP      &trans  &trans            &trans  &trans  &trans
  &kp DEL  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &trans  &trans            &trans  &trans  &trans
  &kp N1   &kp N2    &kp N3    &kp N4     &kp N5           &trans  &trans            &trans  &trans  &trans
                     &trans    &trans     &kp SPACE        &mo 2   &kp LEFT_CONTROL
            >;
        };
    };
};
